[{"uri":"https://wiki.ckep.info/aquaponics/","title":"Aquaponics","tags":[],"description":"","content":"水産養殖を意味する\u0026quot;Aquaculture\u0026quot;と、水耕栽培の\u0026quot;Hydroponics\u0026quot;から成る語。\ndaden.ckep.infoのprojectページ: https://daden.ckep.info/project/aquaponics-plants/\n構成 用途や条件などにより、いくつかの構成が考えられる。\n上部開放型  一株型: 一株ごとに小分けし、薄く張った水の上に並べる方式。水の量に対して開放面積が広いので蒸発しやすいが腐りにくい。 小分けの方法は「スポンジを並べる」「お茶パックにパーライト」が多い。発芽フェーズではどの方式でも前者のスポンジ方式を利用する。 プランタ型: 通常のプランター栽培と似た形状で、土をハイドロボールに置き換え水を循環させる方式。水を循環させないと根腐れしやすい。 内容物や水の流入・流出、水位を調整することで、水槽の上部式フィルターとして運用することができる。 ユニット型: ペットボトルなどを利用して一株ごとのプランタ型にする。純粋なプランタ型より水換えなどの管理がしやすく密閉しやすいが場所をとる。 密閉型: 既製品の水耕栽培キットに多い。できるだけ空気に触れる面積を少なくすることで蒸発しづらくしている。ただし、水の追加や交換をスムーズに行うには設備に工夫が必要。 箱型: 既製品の水耕栽培キットはこれ。箱の上に穴が開いており、そこにスポンジを使用して植える。 大型システム: 屋外設備や工場など個人向けでない構成。調査中。  各構成要素 育てる植物 一般に豆類、葉もの、一部の野菜(トマト・イチゴなど)、球根、多肉植物、観葉植物などが選択肢になる。先行例を個別に調べるのが無難。\n液肥 土壌を使用しない以上、肥料を与える必要がある。\n ハイポニカ 一番有名。液肥で、1液タイプと2液タイプがある。 ハイポネックス 微粉 有名なハイポネックスの中で水耕栽培に対応しているもの。入手しやすい。 ほかにも、アクアポニックスではアクアリウムの生体の廃水を生体ろ過層で変換して利用することができる。  保温設備 保温用銀マットなど。ヒーターを使うと費用対効果が悪くて死ぬ。黒シートは夏がヤバいらしい。\n照明 成長促成用の照明。赤と青が重要らしい。割合は2:1(詳細不明)がいいらしい。緑はいらない。\n照明に関する研究 http://karapaia.com/archives/52277415.html 短いスパンで点滅させることにより電気代を削減できるという研究 https://gigazine.net/news/20190725-lights-on-and-off-agriculture/ 同上\n給水装置 ポンプを利用したもの、大気圧を利用したもの等さまざま。給水の手間を考慮する必要がある。\nエアレーション 水に空気を送り込むことで根腐れを防ぐ、ということになっているが不明。嫌気性細菌の繁殖を防げるらしい。魚に比べてその重要性は低い。 一般に、エアポンプを使用するか高いところから水を落とすことで行う。 エアレーションの代わりとして、サイフォンの原理を利用して水位を変化させる(満水になるたびに一度水を抜く)仕掛けを使うこともあるみたい。\n培地 水に対して植物が自立できるわけではないので何らかの支えがいる。 主に、次のような機能が要求される。\n イオン交換 根腐れ防止になるらしいが不明 硬度/pHの安定 イオン交換の目的はこれらしいけど不明 保水 バクテリアの定着 アクアポニックスでは生物濾過層としてアンモニアを分解する役割を持つ。  上記の機能を満たすため、以下のような材料が選択肢になる。\n スポンジ 以下のどの培地を利用する場合でもスポンジとの組み合わせになる。安い。カビとかに注意。 密度や硬さにより水の吸い方や根の張り方が変わってくる。メラミンスポンジは硬くて密度が高く、評判が悪い。 使用前に、水につけて十分に空気を抜いておく必要がある。空気を含んだ状態では水を吸いづらい。 吸水性ポリマー どこをみても評判が悪い。植物が水を吸えないらしい。 ハイドロボール 粘土を高温で焼いて発泡させて作る多孔質の球。 パーライト パーライト原石や珪藻土等を高温で熱処理してできる人工発泡体。 ゼオライト 沸石。細かい粉末は根腐れ防止剤として販売されている。  資料 先行例  http://luckypochan.blog.fc2.com/  方式：密閉型, ユニット型 植物に合わせいろいろな方式を利用している   http://www.dalahast.jp/category/%E6%B0%B4%E8%80%95%E6%A0%BD%E5%9F%B9/  キットから自作まで多種。継続年数が長く情報が多い。   http://azcji.cocolog-nifty.com/  方式: ユニット型等 いっぱい本だしてる (リンク(Amazon))    既製品・キット  http://www.greenfarm.uing.u-tc.co.jp/  UH-A01E(ユーイング) 方式: 密閉型(エアポンプ有, ファン有, 水は追加のみ), LED有 植物: http://www.greenfarm.uing.u-tc.co.jp/seed/   https://www.duskin.jp/other/eat/suikoseikatsu/  方式: 上と同じ機材のリース 植物: https://www.duskin.jp/other/eat/suikoseikatsu/kind/ 使用例: https://weekly.ascii.jp/elem/000/000/339/339190/   http://hako28.jp/product/piccola/index.html  Piccola(エスキュービズム) 方式: ユニット型 LEDのみ 植物: http://hako28.jp/product/piccola/index.html#section_04 : 使用例: https://weekly.ascii.jp/elem/000/000/326/326170/     https://www.gakkensf.co.jp/ledgarden/ LEDガーデン(学研)   方式: 密閉型 LEDのみ 植物全体を覆うこともできる 植物: https://www.gakkensf.co.jp/ledgarden/contents1.html   http://yasaimonogatari.com/  野菜物語(沖縄セルラー) 方式: 密閉型   http://www.living-farm.com/  リビングファーム 方式: 不明(コンポーネント単位での販売)   http://www.nissei-web.co.jp/category/111.html  総合販売サイト   https://my-best.com/330  20種比較    まとめ記事  https://kinarino.jp/cat6-%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB/10122-%E7%B0%A1%E5%8D%98%E6%89%8B%E4%BD%9C%E3%82%8A%E6%B0%B4%E8%80%95%E6%A0%BD%E5%9F%B9%E3%81%AB%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8%EF%BC%81%E5%AE%B6%E5%BA%AD%E8%8F%9C%E5%9C%92%E3%82%92%E3%82%82%E3%81%A3%E3%81%A8%E8%BA%AB%E8%BF%91%E3%81%AB http://ch.nicovideo.jp/zcool/blomaga/ar984358 https://horti.jp/category/aquaculture  "},{"uri":"https://wiki.ckep.info/privacy/","title":"Privacy Policy","tags":[],"description":"","content":"Google Analytics このサイトはGoogle Analyticsを使用しています。 詳細は「GOOGLE のサービスを使用するサイトやアプリから収集した情報の GOOGLE による使用」のページ(https://policies.google.com/technologies/partner-sites)をご確認ください。\n"},{"uri":"https://wiki.ckep.info/3d/","title":"3D","tags":[],"description":"","content":""},{"uri":"https://wiki.ckep.info/3d/blender/plugin/","title":"Plugin","tags":[],"description":"","content":"Blenderで使っているプラグインメモ。バックアップ代わりに。\nCats関連  cats-blender-plugin\nアバター最適化等  mmd_tools\nMMD関連ファイルの扱いに必要  https://github.com/powroupi/blender_mmd_tools こっちのほうがよい？   material-combiner-addon\nマテリアル統合に必要 VRM_IMPORTER_for_Blender2.8\nVRMインポートに必要    ウェイト関連  Blenderでウェイトのない頂点グループをすべて削除する  (自分で2.8対応)    テクスチャ関連  TexTools  非公式2.8対応版: https://github.com/SavMartin/TexTools-Blender (OSSだし非公式とは…)    追加メッシュ関連  ハートのメッシュを作成するスクリプト(Add on)  (自分で2.8対応)    MithTools関連  https://github.com/mifth/mifthtools  MiraTools - https://blenderartists.org/t/miratools/637385 MifthTools - https://blenderartists.org/t/mifthtools-addon/619227    有料プラグイン  Simply Cloth  https://modelinghappy.com/archives/25222   Voxel Heat Diffuse Skinning  標準プラグイン  Archipack Archimesh Auto Mirror  Blender Addon : Auto Mirror [Blender2.8ver]\n有志2.8対応版   Extra Objects  CurveとMeshの2つがある   F2 LoopTools  "},{"uri":"https://wiki.ckep.info/3d/blender/","title":"Blender","tags":[],"description":"","content":""},{"uri":"https://wiki.ckep.info/fitness/google_fit/","title":"Google Fit","tags":[],"description":"","content":"概要  公式アプリ: Google Fit 紹介ページ: Google Fit\n以前はウェブインターフェイスがあったが廃止された 公式ドキュメント: The Google Fit SDK  Google Fitの思想(勝手な予想)について Google Fitは他のデバイスメーカー・アプリメーカーの自社プラットフォームとは明確に意図(思想)が違う。「自社のデバイスのデータを集積して利用するのが主な目的で、ついでに連携先のプラットフォームに送信・連携先のデータを利用する」のではなく、「Google Fitを利用するアプリは、すべてのデータをGoogle Fitに保存し、必要に応じてすべてのデータをGoogle Fitから取り出して利用する」という意図がある。 つまり、「可能な限りすべてのデータを保存し、可能な限りGoogle Fit上のデータを利用する」必要がある。\n例えば身長・体重のデータはGoogle Fit上に保存できるため、「設定欄で身長・体重をプラットフォーム独自の設定として利用できる」というのは不適切である。(参考: Fitness Data Types | Google Fit ) 意図に合わせるのであれば、「身長・体重を一定期間ごとにGoogle Fitから取得して利用し、必要であれば現在の身長・体重の値をGoogle Fitに手動送信して初期値とすることができる」とすべきである。\n"},{"uri":"https://wiki.ckep.info/fitness/device/","title":"Device","tags":[],"description":"","content":"持ってる / 持ってたフィットネスデバイス\nMi Smart Band 4 仕様  メーカー: Xiaomi 公式URL: https://www.mi.com/jp/mi-smart-band-4/ 参考価格: 3839円 (2020/1/3, Amazon) 公式アプリ: Mi Fit 搭載センサ: 3軸加速度計, 3軸ジャイロスコープ, PPG心拍センサ, 静電容量式近接センサ 防水: 50m (GB/T 30106-2013) 外部連携: 可(サーバー経由ペアリング有)  資料 対応アプリ  Tools \u0026amp; Mi Band\n有料だが余計な表示がなくて良い。言語設定を変えないとデバイスの言語設定を強制的に上書きする。 Mi Bandage for Mi Band and Amazfit Notify \u0026amp; Fitness for Mi Band Gadgetbridge\nデバイスがサーバ経由のペアリングを行うのでroot化が必要とある。どうもそれ以外のアプリは公式アプリ経由で操作している？  連携先  Google Fit\n出力のみ Sleep as Android\nTools \u0026amp; Mi BandかNotify \u0026amp; Fitness for Mi Bandが必要  Body Cardio 仕様  メーカー: Withings (Withings→Nokia→Withings) 公式URL: https://www.withings.com/jp/ja/body-cardio 参考価格: 18557円 (2020/2/4, Amazon) 公式アプリ: Health Mate 搭載センサ: 体重測定(体重センサー4基), 体組成(生体電気インピーダンス解析: 体脂肪, 体内総水分量, 筋肉量, 骨量), 心拍数 外部連携: 可(サーバー経由ペアリング有), Wi-Fi, Bluetooth  資料 連携先  Withings Dashboard APIあり  "},{"uri":"https://wiki.ckep.info/fitness/","title":"Fitness","tags":[],"description":"","content":"フィットネス関連 フィットネストラッカー、アプリ等。\n"},{"uri":"https://wiki.ckep.info/machines/raspberry_pi/","title":"Raspberry Pi","tags":[],"description":"","content":"Raspberry Piのn回目のセットアップ用簡易ガイド\n毎回同じことやると漏れがありそうで怖い\nハードウェア編  追加購入  ヒートシンク: http://www.aitendo.com/product-list/1141/0/photo?num=100\u0026amp;img=120\u0026amp;available=1\u0026amp;sort=featured  Raspberry Pi 3のSoCが14mm,RAMが12mm,LANコントローラが9mm   ACアダプタ  安いほう: http://akizukidenshi.com/catalog/g/gM-10660/ 高いほう: http://akizukidenshi.com/catalog/g/gM-06238/ 分岐ケーブル: https://www.sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-0A6P   拡張基板: http://akizukidenshi.com/catalog/g/gP-11073/  ピンソケット: http://akizukidenshi.com/catalog/g/gC-00085/\nスタック用もあるらしい: http://akizukidenshi.com/catalog/g/gC-10702/ DCジャック: http://akizukidenshi.com/catalog/g/gC-09408/   スタック用のスペーサー: M2.6  ピンヘッダ+ピンソケットが11 千石電商にあるのはこれだけ: https://www.sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-4UUR それ以外は廣杉計器から直接買う (例: https://www.hirosugi-net.co.jp/shop/g/g514/)      適当にはんだ付けして利用。Raspberry Pi2-4まで同じようにできるはず。\nセットアップ編 Raspbian Stretch時点でのフロー。更新の際に一部変更になることがある。 過去にあった変更としては、hostnameの設定方法やIP固定の手順などが変更になっている。\n https://www.raspberrypi.org/downloads/からimageをDL 念のためSD Memory Card Formatterで消去してWin32 Disk Imagerで書き込み /boot/ssh というファイルを作成する。\nこれがあるとデフォルトでSSHが有効になりディスプレイなしセットアップが可能。 LANケーブルを接続して電源を接続。 ルーターの管理画面からMACアドレスがB8:27:EBで始まる新規のデバイスを探す。 とりあえずルータ側から固定IPを振る。このwikiにメモするとよい。 sudo raspi-config から一通り設定 sudo apt-get update と sudo apt-get upgrade sudo apt-get install vim IPを固定してhostnameを設定(OSのバージョンによって操作が違う) sudoなユーザを追加しpiを削除 piはnopasswdなので必要に応じてvisudoで後処理 鍵交換  オプション編  m2xに本体温度を送信するスクリプト(m2x.sh)を/home/daden/binに置いてcronを設定 ラックに格納する前に付箋でIP等を書いておかないと後で見分けがつかなくてどれの電源を切ればいいかわからなくなる  "},{"uri":"https://wiki.ckep.info/machines/","title":"Machines","tags":[],"description":"","content":"自宅設備のメモなど。これを保管するためにwikiがあるみたいなところがある。各セットアップの情報などは個別にまとめる(予定)。\n外部  cloudflare  ドメイン\nckep.info以下全部一括管理    実家  ルーター・モデム等  F660A(192.168.0.1)(グローバルIP不定)\nモデム 貸与だと思う\nポートフォワーディングのみ設定(HTTP,VPN等) 他はほぼスルー RT-AC68U(192.168.0.2)(192.168.12.1)\nルーター リプレース完了して放置されてる Archer C3150(192.168.0.3)(192.168.11.1)\nルーター VPN 上のルータに比べて電波強度が弱いので対策を検討中   ワンボードコンピュータ  Raspberry Pi 2 B(192.168.11.10)(allocator)\nリバースプロキシ・常時稼働 Raspberry Pi 3 B(192.168.11.12)(web-server)\n実験・多用途用・常時稼働 Raspberry Pi 3 B(192.168.11.14)(library)\nWebサービス等・常時稼働 Pine A64+2GB(192.168.11.15)\n実験・多用途用 Raspberry Pi 3 B(192.168.11.13)(ranchan)\n用途未定 ディスプレイを付けてある   NAS  ReadyNas 212(192.168.11.51)\n各種バックアップ用   サーバー (Archer C3150)  HP Compaq Business Desktop dc5800 SF/CT(有線: 192.168.11.17)(86-server)\nhttp://jp.ext.hp.com/products/desktops/old/dc5800sf_ct/core_duo_model.html (リンク切れ)\nジャンクショップで購入。E7300が載ってる版。メモリだけ差し替わってた。HDDは差し替えた。\nx86の鯖でしかできない実験用。当分はdockerとelastic stack関係が載ると思う。現在停止中。 自作機(無線: 192.168.11.31)\n以前のメイン機。CentOSが入れてある。主にゲームサーバー用。最近全く使っていない。   その他  Philips Hue ブリッジ (192.168.11.50)  ランプ1(メインルーム/室内中央) ランプ2(メインルーム/電気スタンド)   ESP32-DevKitC使用室内用センサー\n温度・湿度・気圧・二酸化炭素濃度の計測(24h/15min) メインPC(192.168.11.30) Google Nest Hub    "},{"uri":"https://wiki.ckep.info/","title":"top page","tags":[],"description":"","content":"dadenCKEP-wiki 以前はMediaWikiで管理していたものだが、Raspberry Pi上で運用していたためそこそこの頻度で障害が発生する上にバックアップとリカバリーの手間が非常にかかるため、hugo + GitHug Pagesに移行した。編集権限はGitHubで管理される。\n管理の仕組み GitHub repositoryのdadenCKEP/CKEP-wikiを利用し、静的サイトジェネレータのHugoを使ったサイトをGitHub Pagesにて公開している。\n各branchの役割 現在作成するrepositoryのGitHub Pagesは以前と多少仕様が違い、Sourceの選択肢は「masterの/」か「masterの/docs」のみになっているため、以下のような構成を取っている。\n src/master - 変換元コード。直接編集した際はここにpushする。デフォルトブランチ。 master - 変換後コード。GitHub Actionsによってpushされるため直接操作はしない。GitHub PagesのSourceはこのブランチに設定されている。  更新作業の流れ  src/master branchに更新をpushする。 GitHub Actionsにより変換用のスクリプトが実行され、生成物がmaster branchへpushされる。 GitHub Pagesにより公開ページが更新される。  その他  Hugo用のテーマはmatcornic/hugo-theme-learnを利用しており、サブモジュールとして読み込んでいる。 GitHubはウェブサイト上でマークダウンエディタを利用してソースコードを編集できる。  "},{"uri":"https://wiki.ckep.info/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://wiki.ckep.info/tags/","title":"Tags","tags":[],"description":"","content":""}]